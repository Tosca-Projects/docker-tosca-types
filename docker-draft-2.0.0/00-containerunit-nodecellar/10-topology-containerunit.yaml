tosca_definitions_version: alien_dsl_2_0_0

metadata:
  template_name: docker-topo-sample-nodecellar
  template_version: 2.0.0-SNAPSHOT
  template_author: alien4cloud


description: |
  A nodecellar topology template composing of:
    - 1 ContainerUnit
    - 1 Nodecellar nodes hosted_on the ContainerUnit
    - 1 MongoDBs having a relationship with the Nodecellar node.

imports:
  - docker-types:2.0.0-SNAPSHOT
  - tosca-normative-types:1.0.0-SNAPSHOT
  - docker-draft.sandbox.samples:2.0.0-SNAPSHOT

topology_template:

  inputs:

    cpu_share:
        type: float
        required: true
        default: 1.0

  node_templates:

    ContainerDeploymentUnit:
      type: org.alien4cloud.extended.container.types.ContainerDeploymentUnit

    Nodecellar_Runtime:
      type: org.alien4cloud.extended.container.types.ContainerRuntime
      requirements:
        - host:
            node: ContainerDeploymentUnit
            capability: tosca.capabilities.Container.Docker
            relationship: tosca.relationships.HostedOn

    Nodecellar:
      type: alien.nodes.Application.Docker.Nodecellar
      properties:
        docker_run_cmd: "cd /nodecellar && nodejs server.js"
        docker_env_vars:
          LOG_LEVEL: "DEBUG"
        cpu_share: { get_input: cpu_share }
        mem_share: "1024 MB"
      requirements:
        - host:
            node: Nodecellar_Runtime
            capability: org.alien4cloud.extended.container.capabilities.ApplicationHost
            relationship: tosca.relationships.HostedOn
        - mongo_db:
            node: Mongo
            capability: alien.capabilities.endpoint.docker.Mongo
            relationship: tosca.relationships.ConnectsTo
      capabilities:
        nodecellar_app:
          properties:
            docker_bridge_port_mapping: 0
            port: 3000
            protocol: tcp
            secure: false
            network_name: PRIVATE
            initiator: source
        scalable:
          properties:
            min_instances: 1
            max_instances: 1
            default_instances: 1

    Mongo_Runtime:
      type: org.alien4cloud.extended.container.types.ContainerRuntime

    Mongo:
      type: alien.nodes.Application.Docker.Mongo
      properties:
        cpu_share: { get_input: cpu_share }
        mem_share: "512 MB"
      capabilities:
        mongo_db:
          properties:
            docker_bridge_port_mapping: 0
            port: 27017
            api_version: v1
            protocol: tcp
            secure: false
            network_name: PRIVATE
            initiator: source
        scalable:
          properties:
            min_instances: 1
            max_instances: 1
            default_instances: 1
      requirements:
        - host:
            node: Mongo_Runtime
            capability: org.alien4cloud.extended.container.capabilities.ApplicationHost
            relationship: tosca.relationships.HostedOn
