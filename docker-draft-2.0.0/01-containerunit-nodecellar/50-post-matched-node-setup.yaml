tosca_definitions_version: alien_dsl_2_0_0

metadata:
  template_name: docker-topo-sample-nodecellar
  template_version: 2.0.0-SNAPSHOT
  template_author: alien4cloud


description: |
  The result of the nodecellar topology after the translation of ContainerUnit and Containers into Kubernetes Deployment nodes.


imports:
  - tosca-normative-types:1.0.0-SNAPSHOT
  - kubernetes-modifier-types:2.0.0-SNAPSHOT


repositories:
  docker:
    url: https://hub.docker.com/
    type: http


topology_template:

  node_templates:

    ContainerDeploymentUnit:
      type: org.alien4cloud.extended.container.kubernetes.resource.Deployment
      # Missing capa & req
      requirements:
        - dependency:
            type_requirement: dependency
            node: Mongo_Service
            capability: tosca.capabilities.Node
            relationship: tosca.relationships.DependsOn
        - dependency_2:
            type_requirement: dependency
            node: Mongo_2_Service
            capability: tosca.capabilities.Node
            relationship: tosca.relationships.DependsOn
      artifacts:
        type: tosca.artifacts.File
        file: kubernetes/ContainerDeploymentUnit.yaml
        description: A kubernetes file
    interfaces:
      Standard:
        create:
          inputs:
            DEPENDENCY_IP_ADDRESS: { get_attribute: [ SELF, dependency, ip_address] }
            DEPENDENCY_PORT: { get_attribute: [ SELF, dependency, port] }
            DEPENDENCY_2_IP_ADDRESS: { get_attribute: [ SELF, dependency, ip_address] }
            DEPENDENCY_2_PORT: { get_attribute: [ SELF, dependency, port] }
          implementation: kubectl_service_wrapper.sh
          description: |
            - Deploy the service onto kubernets
            - Export the service ip_address and port to expose it as attributes

    Nodecellar_Service:
      type: org.alien4cloud.extended.container.kubernetes.resource.Service
      # Missing capa & req
      requirements:
        - dependency:
            type_requirement: dependency
            node: ContainerDeploymentUnit
            capability: tosca.capabilities.Node
            relationship: tosca.relationships.DependsOn
      artifacts:
        type: tosca.artifacts.File
        file: kubernetes/Nodecellar_Service.yaml
        description: A kubernetes file

    ContainerDeploymentUnit_Mongo:
      type: org.alien4cloud.extended.container.kubernetes.resource.Deployment
      # Missing capa & req
      artifacts:
        type: tosca.artifacts.File
        file: kubernetes/ContainerDeploymentUnit_Mongo.yaml
        description: A kubernetes file

    Mongo_Service:
      type: org.alien4cloud.extended.container.kubernetes.resource.Service
      # Missing capa & req
      requirements:
        - dependency:
            type_requirement: dependency
            node: ContainerDeploymentUnit_Mongo
            capability: tosca.capabilities.Node
            relationship: tosca.relationships.DependsOn
      artifacts:
        type: tosca.artifacts.File
        file: kubernetes/Mongo_Service.yaml
        description: A kubernetes file

    ContainerDeploymentUnit_Mongo_2:
      type: org.alien4cloud.extended.container.kubernetes.resource.Deployment
      # Missing capa & req
      artifacts:
        type: tosca.artifacts.File
        file: kubernetes/ContainerDeploymentUnit_Mongo_2.yaml
        description: A kubernetes file

    Mongo_2_Service:
      type: org.alien4cloud.extended.container.kubernetes.resource.Service
      # Missing capa & req
      requirements:
        - dependency:
            type_requirement: dependency
            node: ContainerDeploymentUnit_Mongo_2
            capability: tosca.capabilities.Node
            relationship: tosca.relationships.DependsOn
      artifacts:
        type: tosca.artifacts.File
        file: kubernetes/Mongo_2_Service.yaml
        description: A kubernetes file