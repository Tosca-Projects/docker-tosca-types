tosca_definitions_version: alien_dsl_2_0_0

metadata:
  template_name: docker-topo-sample-nodecellar
  template_version: 2.0.0-SNAPSHOT
  template_author: alien4cloud


description: |
  The topology after inputs injection

imports:
  - docker-types:2.0.0-SNAPSHOT
  - tosca-normative-types:1.0.0-SNAPSHOT

repositories:
  docker:
    url: https://hub.docker.com/
    type: http


topology_template:

  node_templates:

    ContainerDeploymentUnit:
      type: org.alien4cloud.extended.container.types.ContainerDeploymentUnit

    Nodecellar:
      type: alien.nodes.Application.Docker.Nodecellar
      properties:
        docker_run_cmd: "cd /nodecellar && nodejs server.js"
        docker_env_vars: 
          LOG_LEVEL: "DEBUG"
        cpu_share: 1.0
        mem_share: "1024 MB"
      requirements:
        - host:
            node: ContainerDeploymentUnit
            capability: tosca.capabilities.Container.Docker
            relationship: tosca.relationships.HostedOn
        - mongo_db:
            node: Mongo
            capability: alien.capabilities.endpoint.docker.Mongo
            relationship: tosca.relationships.ConnectsTo
      capabilities:
        nodecellar_app:
          properties:
            docker_bridge_port_mapping: 0
            port: 3000
            protocol: tcp
            secure: false
            network_name: PRIVATE
            initiator: source
        scalable:
          properties:
            min_instances: 1
            max_instances: 1
            default_instances: 1

    Nodecellar_2:
      type: alien.nodes.Application.Docker.Nodecellar
      properties:
        docker_run_cmd: "cd /nodecellar && nodejs server.js"
        docker_env_vars: 
          LOG_LEVEL: "DEBUG"
        cpu_share: 1.0
        mem_share: "1024 MB"
      requirements:
        - host:
            node: ContainerDeploymentUnit
            capability: tosca.capabilities.Container.Docker
            relationship: tosca.relationships.HostedOn
        - mongo_db:
            node: Mongo_2
            capability: alien.capabilities.endpoint.docker.Mongo
            relationship: tosca.relationships.ConnectsTo
      capabilities:
        nodecellar_app:
          properties:
            docker_bridge_port_mapping: 0
            port: 4000
            protocol: tcp
            secure: false
            network_name: PRIVATE
            initiator: source
        scalable:
          properties:
            min_instances: 1
            max_instances: 1
            default_instances: 1

    Mongo:
      type: alien.nodes.Application.Docker.Mongo
      properties:
        cpu_share: 1.0
        mem_share: "512 MB"
      capabilities:
        mongo_db:
          properties:
            docker_bridge_port_mapping: 0
            port: 27017
            protocol: tcp
            secure: false
            network_name: PRIVATE
            initiator: source
        scalable:
          properties:
            min_instances: 1
            max_instances: 1
            default_instances: 1

    Mongo_2:
      type: alien.nodes.Application.Docker.Mongo
      properties:
        cpu_share: 1.0
        mem_share: "512 MB"
      capabilities:
        mongo_db:
          properties:
            docker_bridge_port_mapping: 0
            port: 27017
            protocol: tcp
            secure: false
            network_name: PRIVATE
            initiator: source
        scalable:
          properties:
            min_instances: 1
            max_instances: 1
            default_instances: 1

  policies:
    - mongo_anti_affinity:
        type: org.alien4cloud.policies.AntiAffinity
        description: The anti affinity policy between node 1 and 2
        targets: [Mongo, Mongo_2]
        properties:
          level: host