tosca_definitions_version: alien_dsl_1_4_0

metadata:
  template_name: docker-draft.sandbox.samples
  template_version: 2.0.0-SNAPSHOT
  template_author: alien4cloud

imports:
  - docker-types:1.4.0-SNAPSHOT
  - tosca-normative-types:1.0.0-SNAPSHOT

repositories:
  docker:
    url: https://hub.docker.com/
    type: http

data_types:
  org.alien4cloud.datatypes.docker.cli-args.Nodecellar:
    derived_from: tosca.datatypes.Root
    properties:
      dns:
        type: string
        required:  false
      lxc-conf:
        type: string
        required: false

node_types:
  org.alien4cloud.nodes.Application.Docker.Nodecellar:
    derived_from: tosca.nodes.Container.Application.DockerContainer
    properties:
      docker_run_cmd:
        type: string
        default: "cd /nodecellar && nodejs server.js"
      docker_options:
        type: org.alien4cloud.datatypes.docker.cli-args.Nodecellar
        required: false
      docker_env_vars:
        type: map
        description: Environment variables for the Docker container.
        entry_schema:
          type: string
        default:
          LOG_LEVEL:
    requirements:
      - mongo_db:
          capability: tosca.capabilities.Endpoint.Database
          relationship: tosca.relationships.ConnectsTo
          occurrences: [1, 1]
    capabilities:
      nodecellar_app:
        type: org.alien4cloud.capabilities.endpoint.docker.Nodecellar
    interfaces:
      Standard:
        create:
          inputs:
            ENV_MONGO_HOST: { get_attribute: [TARGET, mongo_db, ip_address] }
            ENV_MONGO_PORT: { get_property: [TARGET, mongo_db, port] }
            ENV_NODECELLAR_PORT: 3000
          implementation:
            file: afraisse/nodecellar:exp
            repository: docker
            type: tosca.artifacts.Deployment.Image.Container.Docker


  org.alien4cloud.nodes.Application.Docker.Mongo:
    derived_from: tosca.nodes.Container.Application.DockerContainer
    capabilities:
      mongo_db:
        type: org.alien4cloud.capabilities.endpoint.docker.Mongo
    interfaces:
      Standard:
        create:
          implementation:
            file: mongo:latest
            repository: docker
            type: tosca.artifacts.Deployment.Image.Container.Docker

capability_types:

  org.alien4cloud.capabilities.endpoint.docker.Mongo:
    derived_from: tosca.capabilities.Endpoint.Database
    description: >
      Capability to connect to a Docker-supported Mongo database through bridge networking.
    properties:
      docker_bridge_port_mapping:
        type: integer
        description: Port used to bridge to the container's endpoint.
        default: 0
      port:
        type: integer
        default: 27017

  org.alien4cloud.capabilities.endpoint.docker.Nodecellar:
    derived_from: org.alien4cloud.capabilities.endpoint.Docker
    properties:
      docker_bridge_port_mapping:
        type: integer
        description: Port used to bridge to the container's endpoint.
        default: 0
      port:
        type: integer
        default: 3000
