tosca_definitions_version: alien_dsl_2_0_0

metadata:
  template_name: kubernetes-modifier-types
  template_version: 2.0.0-SNAPSHOT
  template_author: alien4cloud


description: |
  Kubernetes types useful for modifiers.

imports:
  - tosca-normative-types:1.0.0-SNAPSHOT

data_types:

  # org.alien4cloud.extended.container.data.Deployments:
  #   derived_from: tosca.datatypes.Root
  #   description: |
  #     c.f. https://kubernetes.io/docs/api-reference/v1.6/#deployment-v1beta1-apps
  #   properties:
  #     apiVersion:
  #       type: string 
  #       description: |
  #         APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources
  #     kind:
  #       type: string 
  #       description: |
  #         Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds
  #     metadata:
  #       type: ObjectMeta 
  #       description: |
  #         Standard object metadata.
  #     spec:
  #       type: org.alien4cloud.extended.container.data.DeploymentsSpec
  #       description: |
  #         Specification of the desired behavior of the Deployment


  org.alien4cloud.extended.container.data.DeploymentsSpec:
    derived_from: tosca.datatypes.Root
    description: >
      c.f. https://kubernetes.io/docs/api-reference/v1.6/#deploymentspec-v1beta1-apps
    properties:
      minReadySeconds:
        type: integer
        descriptions: |
          Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)
      paused:
        type: boolean
        descriptions: |
          Indicates that the deployment is paused.
      progressDeadlineSeconds:
        type: integer
        descriptions: |
          The maximum time in seconds for a deployment to make progress before it is considered to be failed. The deployment controller will continue to process failed deployments and a condition with a ProgressDeadlineExceeded reason will be surfaced in the deployment status. Once autoRollback is implemented, the deployment controller will automatically rollback failed deployments. Note that progress will not be estimated during the time a deployment is paused. Defaults to 600s.
      replicas:
        type: integer
        descriptions: |
          Number of desired pods. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1.
      revisionHistoryLimit:
        type: integer
        descriptions: |
          The number of old ReplicaSets to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified. Defaults to 2.
      rollbackTo:
        type: string # datetype: RollbackConfig
        descriptions: |
          The config this deployment is rolling back to. Will be cleared after rollback is done.
      selector:
        type: string # datetype: LabelSelector
        descriptions: |
          Label selector for pods. Existing ReplicaSets whose pods are selected by this will be the ones affected by this deployment.
      strategy:
        type: string # datetype: DeploymentStrategy
        descriptions: |
          The deployment strategy to use to replace existing pods with new ones.
      template:
        type: string # datetype: PodTemplateSpec
        descriptions: |
          Template describes the pods that will be created.


  org.alien4cloud.extended.container.data.PodTemplateSpec:
    derived_from: tosca.datatypes.Root
    description: >
      c.f. hhttps://kubernetes.io/docs/api-reference/v1.6/#podtemplatespec-v1-core
      For instance:
        metadata:
          labels:
            app: nginx
    properties:
      metadata:
        type: string
        descriptions: |
          Standard object's metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata
      spec:
        type: PodSpec
        descriptions: |
          Specification of the desired behavior of the pod. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status


  org.alien4cloud.extended.container.data.PodSpec:
    derived_from: tosca.datatypes.Root
    properties:
      activeDeadlineSeconds: 
        type: integer
        descriptions: |
          Optional duration in seconds the pod may be active on the node relative to StartTime before the system will actively try to mark it failed and kill associated containers. Value must be a positive integer.
      affinity: 
        type: org.alien4cloud.extended.container.data.Affinity
        descriptions: |
           If specified, the pod's scheduling constraints
      automountServiceAccountToken: 
        type: boolean
        descriptions: |
          AutomountServiceAccountToken indicates whether a service account token should be automatically mounted.
      # containers: 
      #   type: Container
      #   descriptions: |
      #     array List of containers belonging to the pod. Containers cannot currently be added or removed. There must be at least one container in a Pod. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers
      dnsPolicy: 
        type: string
        descriptions: |
           Set DNS policy for containers within the pod. One of 'ClusterFirstWithHostNet', 'ClusterFirst' or 'Default'. Defaults to "ClusterFirst". To have DNS options set along with hostNetwork, you have to specify DNS policy explicitly to 'ClusterFirstWithHostNet'.
      hostIPC: 
        type: boolean
        descriptions: |
          Use the host's ipc namespace. Optional: Default to false.
      hostNetwork: 
        type: boolean
        descriptions: |
          Host networking requested for this pod. Use the host's network namespace. If this option is set, the ports that will be used must be specified. Default to false.
      hostPID: 
        type: boolean
        descriptions: |
          Use the host's pid namespace. Optional: Default to false.
      hostname: 
        type: string
        descriptions: |
           Specifies the hostname of the Pod If not specified, the pod's hostname will be set to a system-defined value.
      imagePullSecrets: 
        type: LocalObjectReference
        descriptions: |
          array  ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec. If specified, these secrets will be passed to individual puller implementations for them to use. For example, in the case of docker, only DockerConfig type secrets are honored. More info: http://kubernetes.io/docs/user-guide/images#specifying-imagepullsecrets-on-a-pod
      initContainers: 
        type: Container
        descriptions: |
          array List of initialization containers belonging to the pod. Init containers are executed in order prior to containers being started. If any init container fails, the pod is considered to have failed and is handled according to its restartPolicy. The name for an init container or normal container must be unique among all containers. Init containers may not have Lifecycle actions, Readiness probes, or Liveness probes. The resourceRequirements of an init container are taken into account during scheduling by finding the highest request/limit for each resource type, and then using the max of of that value or the sum of the normal containers. Limits are applied to init containers in a similar fashion. Init containers cannot currently be added or removed. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers
      nodeName: 
        type: string
        descriptions: |
           NodeName is a request to schedule this pod onto a specific node. If it is non-empty, the scheduler simply schedules this pod onto that node, assuming that it fits resource requirements.
      nodeSelector: 
        type: object
        descriptions: |
           NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
      restartPolicy: 
        type: string
        descriptions: |
           Restart policy for all containers within the pod. One of Always, OnFailure, Never. Default to Always. More info: http://kubernetes.io/docs/user-guide/pod-states#restartpolicy
      schedulerName: 
        type: string
        descriptions: |
           If specified, the pod will be dispatched by specified scheduler. If not specified, the pod will be dispatched by default scheduler.
      securityContext: 
        type: PodSecurityContext
        descriptions: |
           SecurityContext holds pod-level security attributes and common container settings. Optional: Defaults to empty. See type description for default values of each field.
      serviceAccount: 
        type: string
        descriptions: |
           DeprecatedServiceAccount is a depreciated alias for ServiceAccountName. Deprecated: Use serviceAccountName instead.
      serviceAccountName: 
        type: string
        descriptions: |
           ServiceAccountName is the name of the ServiceAccount to use to run this pod. More info: http://releases.k8s.io/HEAD/docs/design/service_accounts.md
      subdomain: 
        type: string
        descriptions: |
           If specified, the fully qualified Pod hostname will be "...svc.". If not specified, the pod will not have a domainname at all.
      terminationGracePeriodSeconds: 
        type: integer
        descriptions: |
          Optional duration in seconds the pod needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. Defaults to 30 seconds.
      tolerations: 
        type: Toleration
        descriptions: |
          array  If specified, the pod's tolerations. More info: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration
      volumes: 
        type: Volume
        descriptions: |
          array  List of volumes that can be mounted by containers belonging to the pod. More info: http://kubernetes.io/docs/user-guide/volumes


  org.alien4cloud.extended.container.data.ContainerSpec:
    derived_from: tosca.datatypes.Root
    properties:
      args:
        type: string
        description: |
          array  Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers#containers-and-commands
      command:
        type:string
        description: |
          array  Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers#containers-and-commands
      env:
        type:EnvVar
        description: |
          array  List of environment variables to set in the container. Cannot be updated.
      envFrom:
        type:EnvFromSource
        description: |
          array List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.
      image:
        type:string
        description: |
          Docker image name. More info: http://kubernetes.io/docs/user-guide/images
      imagePullPolicy:
        type:string
        description: |
          Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/images#updating-images
      lifecycle:
        type:Lifecycle
        description: |
          Actions that the management system should take in response to container lifecycle events. Cannot be updated.
      livenessProbe:
        type:Probe
        description: |
          Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes
      name:
        type:string
        description: |
          Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.
      ports:
        type:ContainerPort
        description: |
          array List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default "0.0.0.0" address inside a container will be accessible from the network. Cannot be updated.
      readinessProbe:
        type:Probe
        description: |
          Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes
      resources:
        type:ResourceRequirements
        description: |
          Compute Resources required by this container. Cannot be updated. More info: http://kubernetes.io/docs/concepts/storage/persistent-volumes/#resources
      securityContext:
        type:SecurityContext
        description: |
          Security options the pod should run with. More info: http://releases.k8s.io/HEAD/docs/design/security_context.md
      stdin:
        type:boolean
        description: |
          Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.
      stdinOnce:
        type:boolean
        description: |
          Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false
      terminationMessagePath:
        type:string
        description: |
          Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.
      terminationMessagePolicy:
        type:string
        description: |
          Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.
      tty:
        type:boolean
        description: |
          Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.
      volumeMounts:
        type:VolumeMount
        description: |
          array Pod volumes to mount into the container's filesystem. Cannot be updated.
      workingDir:
        type:string
        description: |
          Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.

  org.alien4cloud.extended.container.data.Affinity:
    derived_from: tosca.datatypes.Root
    properties:
      # nodeAffinity:
      #   type: NodeAffinity
      #   description: |
      #     Describes node affinity scheduling rules for the pod.
      # podAffinity:
      #   type: PodAffinity
      #   description: |
      #     Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
      podAntiAffinity:
        type: org.alien4cloud.extended.container.data.PodAntiAffinity
        description: |
          Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).


  org.alien4cloud.extended.container.data.PodAntiAffinity:
    derived_from: tosca.datatypes.Root
    properties:
      preferredDuringSchedulingIgnoredDuringExecution:
        type: list
        entry_schema:
          type: WeightedPodAffinityTerm

  WeightedPodAffinityTerm:
    derived_from: tosca.datatypes.Root
    properties:
      podAffinityTerm:
        type: PodAffinityTerm
          description: |
            A node selector term, associated with the corresponding weight.
      weight:
        type: integer
          description: |
            Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.


  PodAffinityTerm:
    derived_from: tosca.datatypes.Root
    properties:
      labelSelector:
        type: LabelSelector
        description: |
          A label query over a set of resources, in this case pods.
      namespaces:
        type: list
        description: |
          namespaces specifies which namespaces the labelSelector applies to (matches against); nil list means "this pod's namespace," empty list means "all namespaces" The json tag here is not "omitempty" since we need to distinguish nil and empty. See https://golang.org/pkg/encoding/json/#Marshal for more details.
        entry_schema:
          type: string
      topologyKey:
        type: string
        description: |
          This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. For PreferredDuringScheduling pod anti-affinity, empty topologyKey is interpreted as "all topologies" ("all topologies" here means all the topologyKeys indicated by scheduler command-line argument --failure-domains); for affinity and for RequiredDuringScheduling pod anti-affinity, empty topologyKey is not allowed.

  LabelSelector:
    derived_from: tosca.datatypes.Root
    properties:
      matchExpressions:
        type: list
        description: |
          matchExpressions is a list of label selector requirements. The requirements are ANDed.
        entry_schema:
          type: LabelSelectorRequirement
      matchLabels:
        type: object
        description: |
          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.

  LabelSelectorRequirement:
    derived_from: tosca.datatypes.Root
    properties:
      key:
        type: string
        description: |
          key is the label key that the selector applies to.
      operator:
        type: string
        description: |
          operator represents a key's relationship to a set of values. Valid operators ard In, NotIn, Exists and DoesNotExist.
      values:
        type: list
        description: |
          values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
        entry_schema:
          type: string


node_types:

  # HOWTO: How about relationships and capabilities ?

  org.alien4cloud.extended.container.types.kubernetes.Base:
    abstract: true
    derived_from: tosca.nodes.Root
    description: |
          c.f. https://kubernetes.io/docs/api-reference/v1.6/#deployment-v1beta1-apps
    properties:
      apiVersion:
        type: string 
        description: |
          APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources
      kind:
        type: string 
        description: |
          Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds
      metadata:
        type: ObjectMeta 
        description: |
          Standard object metadata.

  org.alien4cloud.extended.container.types.kubernetes.Deployments:
    derived_from: org.alien4cloud.extended.container.types.kubernetes.abstract.Deployments
    properties:
      spec:
        type: org.alien4cloud.extended.container.data.DeploymentsSpec
        description: |
          Specification of the desired behavior of the Deployment


  org.alien4cloud.extended.container.types.kubernetes.abstract.Deployments:
    abstract: true
    derived_from: org.alien4cloud.extended.container.types.kubernetes.Base
    description: >
      Represent a kubernetes Deployments
    capabilities:
      host:
        type: tosca.capabilities.Container
    properties:
      apiVersion:
        type: string 
        description: |
          APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources
        default: extensions/v1beta
        constraints:
          - equals: extensions/v1beta
      kind:
        type: string 
        description: |
          Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds
        default: Deployment
        constraints:
          - equals: Deployment
      deployments:
        type: org.alien4cloud.extended.container.data.Deployments


  org.alien4cloud.extended.container.types.kubernetes.Container:
    derived_from: org.alien4cloud.extended.container.types.kubernetes.abstract.Container

  org.alien4cloud.extended.container.types.kubernetes.abstract.Container:
    abstract: true
    derived_from: tosca.nodes.Root
    description: >
      Represent a kubernetes ContainerSpec.
    requirements:
      - host:
          capability: tosca.capabilities.Container
          node: org.alien4cloud.extended.container.types.kubernetes.Deployments
          relationship: tosca.relationships.HostedOn
      - docker_endpoint:
          capability: tosca.capabilities.Endpoint
          relationship: tosca.relationships.ConnectsTo
          occurrences: [0, UNBOUND]
    capabilities:
      docker_endpoint:
        type: tosca.capabilities.Endpoint
    properties: 
      container:
        type: org.alien4cloud.extended.container.data.ContainerSpec

policy_types:
  org.alien4cloud.extended.container.policy.kubernetes.AntiAffinityLabel:
    type: org.alien4cloud.policies.AntiAffinity
    description: >
      c.f. https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity

    # properties:
    #   affinity:
    #     type: org.alien4cloud.extended.container.data.PodAntiAffinity


# apiVersion: v1
# kind: Pod
# metadata:
#   name: with-pod-affinity
# spec:
#   affinity:
#     podAffinity:
#       requiredDuringSchedulingIgnoredDuringExecution:
#       - labelSelector:
#           matchExpressions:
#           - key: security
#             operator: In
#             values:
#             - S1
#         topologyKey: failure-domain.beta.kubernetes.io/zone
#     podAntiAffinity:
#       preferredDuringSchedulingIgnoredDuringExecution:
#       - weight: 100
#         podAffinityTerm:
#           labelSelector:
#             matchExpressions:
#             - key: security
#               operator: In
#               values:
#               - S2
#           topologyKey: kubernetes.io/hostname
#   containers:
#   - name: with-pod-affinity
#     image: gcr.io/google_containers/pause:2.0