tosca_definitions_version: alien_dsl_1_4_0

template_name: docker-kubernetes-types
template_author: alien4cloud
template_version: 1.4.0-SNAPSHOT

imports:
  - tosca-normative-types:1.0.0-SNAPSHOT
  - docker-types:2.0.0-SNAPSHOT

description: |
  Contains Kubernetes types used by modifiers and plain kubernetes objects

data_types:

  Affinity:
    derived_from: tosca.datatypes.Root
    properties:
      nodeAffinity:
        type: NodeAffinity 
        description: >
          Describes node affinity scheduling rules for the pod.
      podAffinity:
        type: PodAffinity 
        description: >
          escribes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
      podAntiAffinity:
        type: PodAntiAffinity 
        description: >
          escribes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).

  Container:
    derived_from: tosca.datatypes.Root
    properties:
      args:
        type: list
        entry_schema:
          type: string
          description: >
            Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers#containers-and-commands
      command:
        type: list
        entry_schema:
          type: string
          description: >
            Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers#containers-and-commands
      env:
        type: list
        entry_schema:
          type: EnvVar
          description: >
            List of environment variables to set in the container. Cannot be updated.
      envFrom:
        type: list
        entry_schema:
          type: EnvFromSource
          description: >
            List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.
      image:
        type: string
        description: >
          Docker image name. More info: http://kubernetes.io/docs/user-guide/images
      imagePullPolicy:
        type: string
        description: >
          Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/images#updating-images
      lifecycle:
        type: Lifecycle
        description: >
          Actions that the management system should take in response to container lifecycle events. Cannot be updated.
      livenessProbe:
        type: Probe
        description: >
          Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes
      name:
        type: string
        description: >
          Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.
      ports:
        type: list
        entry_schema:
          type: ContainerPort
          description: >
            List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default "0.0.0.0" address inside a container will be accessible from the network. Cannot be updated.
      readinessProbe:
        type: Probe
        description: >
          Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes
      resources:
        type: ResourceRequirements
        description: >
          Compute Resources required by this container. Cannot be updated. More info: http://kubernetes.io/docs/concepts/storage/persistent-volumes/#resources
      securityContext:
        type: SecurityContext
        description: >
          Security options the pod should run with. More info: http://releases.k8s.io/HEAD/docs/design/security_context.md
      stdin:
        type: boolean
        description: >
          Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.
      stdinOnce:
        type: boolean
        description: >
          Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false
      terminationMessagePath:
        type: string
        description: >
          Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.
      terminationMessagePolicy:
        type: string
        description: >
          Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.
      tty:
        type: boolean
        description: >
          Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.
      volumeMounts:
        type: list
        entry_schema:
          type: VolumeMount
          description: >
            Pod volumes to mount into the container's filesystem. Cannot be updated.
      workingDir:
        type: string
        description: >
          Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.

  PodSpec:
    derived_from: tosca.datatypes.Root
    description: >
      c.f. https://github.com/kubernetes/api/blob/master/core/v1/types.go#L2536
    properties:
        activeDeadlineSeconds:
          type: integer
          description: >
            Optional duration in seconds the pod may be active on the node relative to StartTime before the system will actively try to mark it failed and kill associated containers. Value must be a positive integer.
        affinity:
          type: Affinity
          description: > 
            If specified, the pod's scheduling constraints
        automountServiceAccountToken:
          type: boolean
          description: >
            AutomountServiceAccountToken indicates whether a service account token should be automatically mounted.
        containers:
          type: list 
          entry_schema:
            type: Container
            description: >
              List of containers belonging to the pod. Containers cannot currently be added or removed. There must be at least one container in a Pod. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers
        dnsPolicy:
          type: string
          description: >
            Set DNS policy for containers within the pod. One of 'ClusterFirstWithHostNet', 'ClusterFirst' or 'Default'. Defaults to "ClusterFirst". To have DNS options set along with hostNetwork, you have to specify DNS policy explicitly to 'ClusterFirstWithHostNet'.
        hostIPC:
          type: boolean
          description: >
            Use the host's ipc namespace. Optional: Default to false.
        hostNetwork:
          type: boolean
          description: >
            Host networking requested for this pod. Use the host's network namespace. If this option is set, the ports that will be used must be specified. Default to false.
        hostPID:
          type: boolean
          description: >
            Use the host's pid namespace. Optional: Default to false.
        hostname:
          type: string
          description: >
            Specifies the hostname of the Pod If not specified, the pod's hostname will be set to a system-defined value.
        imagePullSecrets:
          type: list
          entry_schema:
            type: LocalObjectReference
            description: >
              ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec. If specified, these secrets will be passed to individual puller implementations for them to use. For example, in the case of docker, only DockerConfig type secrets are honored. More info: http://kubernetes.io/docs/user-guide/images#specifying-imagepullsecrets-on-a-pod
        initContainers:
          type: list
          entry_schema:
            type: Container
            description: >
              List of initialization containers belonging to the pod. Init containers are executed in order prior to containers being started. If any init container fails, the pod is considered to have failed and is handled according to its restartPolicy. The name for an init container or normal container must be unique among all containers. Init containers may not have Lifecycle actions, Readiness probes, or Liveness probes. The resourceRequirements of an init container are taken into account during scheduling by finding the highest request/limit for each resource type, and then using the max of of that value or the sum of the normal containers. Limits are applied to init containers in a similar fashion. Init containers cannot currently be added or removed. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers
        nodeName:
          type: string
          description: >
            NodeName is a request to schedule this pod onto a specific node. If it is non-empty, the scheduler simply schedules this pod onto that node, assuming that it fits resource requirements.
        nodeSelector:
          type: object
          description: >
            NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
        restartPolicy:
          type: string
          description: >
            Restart policy for all containers within the pod. One of Always, OnFailure, Never. Default to Always. More info: http://kubernetes.io/docs/user-guide/pod-states#restartpolicy
        schedulerName:
          type: string
          description: >
            If specified, the pod will be dispatched by specified scheduler. If not specified, the pod will be dispatched by default scheduler.
        securityContext:
          type: PodSecurityContext
          description: >
            SecurityContext holds pod-level security attributes and common container settings. Optional: Defaults to empty. See type description for default values of each field.
        serviceAccount:
          type: string
          description: >
            DeprecatedServiceAccount is a depreciated alias for ServiceAccountName. Deprecated: Use serviceAccountName instead.
        serviceAccountName:
          type: string
          description: >
            ServiceAccountName is the name of the ServiceAccount to use to run this pod. More info: http://releases.k8s.io/HEAD/docs/design/service_accounts.md
        subdomain:
          type: string
          description: >
            If specified, the fully qualified Pod hostname will be "...svc.". If not specified, the pod will not have a domainname at all.
        terminationGracePeriodSeconds:
          type: integer
          description: >
            Optional duration in seconds the pod needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. Defaults to 30 seconds.
        tolerations:
          type: list
          entry_schema:
            type: Toleration
            description: >
              If specified, the pod's tolerations. More info: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration
        volumes:
          type: list
          entry_schema:
            type: Volume
            description: >
              List of volumes that can be mounted by containers belonging to the pod. More info: http://kubernetes.io/docs/user-guide/volumes


artifact_types:

  org.alien4cloud.extended.artifacts.KubernetesResource:
    description: Kubernetes files
    derived_from: tosca.artifacts.Deployment
    mime_type: application/kubernetes
    file_ext: [ pod.yaml, deployments.yaml, replicatset.yaml ]

  org.alien4cloud.extended.artifacts.ECS:
    description: Kubernetes files
    derived_from: tosca.artifacts.Deployment
    mime_type: application/kubernetes
    file_ext: [ taskfile.json, service.json ]


node_types:

  org.alien4cloud.extended.container.kubernetes.KubenetesResource:
    derived_from: tosca.nodes.Root
    description: >
      Represent a kubernetes Pod, ReplicaSet or Deployments
    artifacts:
      type: org.alien4cloud.extended.artifacts.KubernetesResource
      scripts_directory: kubernetes
      description: Directory containing Kubernetes resources

  org.alien4cloud.extended.container.kubernetes.ESCResource:
    derived_from: tosca.nodes.Root
    description: >
      Represent a kubernetes Pod, ReplicaSet or Deployments
    artifacts:
      type: org.alien4cloud.extended.artifacts.ECS
      scripts_directory: ecs
      description: Directory containing ECS resources

#####################


data_types:

  PodSpec:
    derived_from: tosca.datatypes.Root
    description: >
      c.f. https://github.com/kubernetes/api/blob/master/core/v1/types.go#L2536
    properties:
        activeDeadlineSeconds:
          type: integer
          description: >
            Optional duration in seconds the pod may be active on the node relative to StartTime before the system will actively try to mark it failed and kill associated containers. Value must be a positive integer.
        affinity:
          type: Affinity
          description: > 
            If specified, the pod's scheduling constraints
        imagePullSecrets:
          type: list
          entry_schema:
            type: LocalObjectReference
            description: >
        containers:
          type: list 
          entry_schema:
            type: Container
            description: >
              List of containers belonging to the pod. Containers cannot currently be added or removed. There must be at least one container in a Pod. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers
        [...]


  Container:
    derived_from: tosca.datatypes.Root
    properties:
      args:
        type: list
        entry_schema:
          type: string
          description: >
            Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers#containers-and-commands
      command:
        type: list
        entry_schema:
          type: string
          description: >
            Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers#containers-and-commands
      env:
        type: list
        entry_schema:
          type: EnvVar
          description: >
            List of environment variables to set in the container. Cannot be updated.
      image:
        type: string
        description: >
          Docker image name. More info: http://kubernetes.io/docs/user-guide/images
      imagePullPolicy:
        type: string
        description: >
          Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/images#updating-images
      volumeMounts:
        type: list
        entry_schema:
          type: VolumeMount
          description: >
            Pod volumes to mount into the container's filesystem. Cannot be updated.
        [...]

#######################

node_types:

  org.alien4cloud.extended.container.kubernetes.Pod:
    derived_from: tosca.nodes.Root
    description: >
      Represent a kubernetes Pod.
    properties: 
      apiVersion:
        type: string
      kind:
        type: string
      metadata:
        type: map
        entry_schema:
          type: string
      PodSpec: 
        type: PodSpec

  org.alien4cloud.extended.container.kubernetes.Service_ContainerUnit:

  org.alien4cloud.extended.container.kubernetes.policies.AutoScaling_ContainerUnit:

##############################


  org.alien4cloud.extended.container.kubernetes.policies.AutoScaling_ContainerUnit:

  org.alien4cloud.extended.container.kubernetes.Service_ContainerUnit:


  org.alien4cloud.extended.container.kubernetes.Deployments:
    derived_from: org.alien4cloud.extended.container.kubernetes.AbstractDeployments

  org.alien4cloud.extended.container.kubernetes.AbstractDeployments:
    abstract: true
    derived_from: tosca.nodes.Root
    description: >
      Represent a kubernetes Pod.
    properties: 
      apiVersion:
        type: string
      kind:
        type: string
      metadata:
        type: map
        entry_schema:
          type: string
      PodSpec: 
        type: PodSpec



  org.alien4cloud.extended.container.kubernetes.Container:
    derived_from: tosca.nodes.Root
    description: >
      Represent a kubernetes ContainerSpec.
    properties: 
      container:
        type: Container


  # org.alien4cloud.extended.container.kubernetes.ReplicationController:
  #   derived_from: tosca.nodes.Root
  #   description: >
  #     Deprecated. Use ReplicaSet or Deployments instead.
  #   properties:
  #     # ...
  #     template:
  #       type: PodTemplateSpec

  # org.alien4cloud.extended.container.kubernetes.ReplicaSet:
  #   derived_from: tosca.nodes.Root
  #   properties:
  #     # ...
  #     template:
  #       type: PodTemplateSpec

  # org.alien4cloud.extended.container.kubernetes.Deployments:
  #   derived_from: tosca.nodes.Root
  #   properties:
  #     # ...
  #     template:
  #       type: PodTemplateSpec

  # org.alien4cloud.extended.container.kubernetes.Service:
  #   derived_from: tosca.nodes.Root
  #   properties:
  #     # ...
